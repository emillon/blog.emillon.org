---
title: Parsing Brogue seed data with Parsec
author: Etienne Millon
tags: haskell parsec brogue 
---

### Gaming

When I was younger, I enjoyed a lot japanese RPGs on the SNES. Stories
were nice, combat systems were nice, these games were AA.

But now, don't enjoy too much stuff with too much theme in it. For
example, I prefer games like [Puerto Rico][BGGPuertoRico] to
[The Werewolves of Miller's Hollow][BGGWerewolves]. Of course, it's a
very different kind of game but what I like about Puerto Rico is that
like many European games, the theme is completely optional. It could
take place in Alaska, the Balkans, or ancient China and still be the
same game. What's important is that you

### Roguelikes & Brogue

Roguelikes are a type of game which are a descendant of the venerable
[Rogue][WPRogue]. The most notorious is probably [NetHack]. [Brogue], which I'll
talk about here, is a more modern roguelike, which is certainly easier for
beginners. It looks like… that:

![BrogueAnim]

As it's quite abstract, this screenshot can be read as this:

  - `@` is the player. You control its position using the hjkl keys to move it
    like in vi, and using yubn to move it diagonals.
  - `#` are walls.
  - `.` is an empty spot (you can walk over it).
  - `"` is grass. It's like an empty spot, except that it can burn.
  - `~` is water. As you can see, it's animated and beautiful (sort of).
  - `r` is a rat. There are a lot of different enemies in Brogue, with different
    characteristics. Rats are the weakest type, and are usually defeated in a
    hit.
  - `Ω` is the dungeon's exit. The goal of the game is to exit the dungeon,
    which is challenging because to unlock the exit door, you have to be in
    possession of the Amulet of Yendor which is on level 26. That is to say, you
    have to make your way through 26 levels full of enemies down and back up
    (the ascension is quite easy, though).

### Seeds & builds

In Brogue, you can't do much besides taking items, fighting monsters, and
exploring the dungeon. Much of your actions are based on the items you will
find, and they are randomly spawned.

The random system is quite ingenious. The world is statically generated by a RNG
and is entirely determined by a seed. For example, when you start a game, it's
seeded with the current time. During the gameplay, everything is deterministic
with respect to this seed.

It makes it possible to do a very simple for saved games. You just have to store
the seed and the sequence of inputs, and replay them at load time. This means
that short games are very fast to load, but end-game saves are a bit long
(~1 min).

During a game, you have to use what you find to survive. But some items can work
together to create a good "build".

For example, I was interested in trying *the jellymaster build*. It relies on a
type of enemy, the Pink Jelly, which duplicates itself when hit (although with
half health). Such an enemy could become a powerful ally, because it's a source
of unlimited allies!

To put this strategy in action, two items are needed:

  - a *wand of domination*, which converts an enemy to an ally.
  - a *staff of healing*, with which you can heal allies.

Then, the strategy is to find a pink jelly (they are common enemies), dominate
it with the wand, and heal one of the parts once in a while when it is hit.

The goal of this article is to write a tool to find seeds that have both a wand
of domination and a staff of healing accessible in the first few levels.

[BGGPuertoRico]: http://boardgamegeek.com/boardgame/3076/puerto-rico
[BGGWerewolves]: http://boardgamegeek.com/boardgame/25821/the-werewolves-of-millers-hollow
[WPRogue]: http://en.wikipedia.org/wiki/Rogue_(video_game)
[NetHack]: http://www.nethack.org/
[Brogue]: https://sites.google.com/site/broguegame/
[BrogueAnim]: brogueanim.gif
